{"ast":null,"code":"var _jsxFileName = \"/home/tis-20/Music/ReactPractice/hookswithevent/src/Accordian/MyAccordian.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MyAccordian = props => {\n  _s();\n\n  const [show, setShow] = useState(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"accordian_question_section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        onClick: () => {\n          setShow(!show);\n          let demo = document.querySelector('.answer_div');\n          demo.classList.add(\"myClass\");\n\n          if (demo.classList.contains('myClass')) {\n            setShow(false);\n            demo.classList.remove(\"myClass\");\n            setShow(true);\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          children: show ? \"-\" : \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\" \", props.question, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this), show && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"answer_div\",\n        children: props.answer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 11\n    }, this)\n  }, void 0, false);\n};\n\n_s(MyAccordian, \"NKb1ZOdhT+qUsWLXSgjSS2bk2C4=\");\n\n_c = MyAccordian;\nexport default MyAccordian;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyAccordian\");","map":{"version":3,"names":["React","useState","MyAccordian","props","show","setShow","demo","document","querySelector","classList","add","contains","remove","question","answer"],"sources":["/home/tis-20/Music/ReactPractice/hookswithevent/src/Accordian/MyAccordian.js"],"sourcesContent":["import React, { useState } from 'react'\n\nconst MyAccordian = (props) =>{\n\n    const [show, setShow] = useState(false);\n    \n    return(\n          <>\n          <div className='accordian_question_section'>\n                <h3 onClick={() => { setShow(!show)\n\n                 let demo = document.querySelector('.answer_div');\n                 demo.classList.add(\"myClass\");\n                 if(demo.classList.contains('myClass')){\n                   setShow(false)\n                   demo.classList.remove(\"myClass\");\n                   setShow(true)\n                 }\n            \n            }}><i>{show?\"-\":\"+\"}</i>\n                   <span> {props.question} </span></h3>\n                {show && <p className='answer_div'>{props.answer}</p>} \n          </div>\n  \n            \n          </>  \n    )           \n}\n\nexport default MyAccordian"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAU;EAAA;;EAE1B,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,KAAD,CAAhC;EAEA,oBACM;IAAA,uBACA;MAAK,SAAS,EAAC,4BAAf;MAAA,wBACM;QAAI,OAAO,EAAE,MAAM;UAAEI,OAAO,CAAC,CAACD,IAAF,CAAP;UAEpB,IAAIE,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,aAAvB,CAAX;UACAF,IAAI,CAACG,SAAL,CAAeC,GAAf,CAAmB,SAAnB;;UACA,IAAGJ,IAAI,CAACG,SAAL,CAAeE,QAAf,CAAwB,SAAxB,CAAH,EAAsC;YACpCN,OAAO,CAAC,KAAD,CAAP;YACAC,IAAI,CAACG,SAAL,CAAeG,MAAf,CAAsB,SAAtB;YACAP,OAAO,CAAC,IAAD,CAAP;UACD;QAEL,CAVG;QAAA,wBAUD;UAAA,UAAID,IAAI,GAAC,GAAD,GAAK;QAAb;UAAA;UAAA;UAAA;QAAA,QAVC,eAWG;UAAA,gBAAQD,KAAK,CAACU,QAAd;QAAA;UAAA;UAAA;UAAA;QAAA,QAXH;MAAA;QAAA;QAAA;QAAA;MAAA,QADN,EAaOT,IAAI,iBAAI;QAAG,SAAS,EAAC,YAAb;QAAA,UAA2BD,KAAK,CAACW;MAAjC;QAAA;QAAA;QAAA;MAAA,QAbf;IAAA;MAAA;MAAA;MAAA;IAAA;EADA,iBADN;AAqBH,CAzBD;;GAAMZ,W;;KAAAA,W;AA2BN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}