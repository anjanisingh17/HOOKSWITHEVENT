{"ast":null,"code":"var _jsxFileName = \"/home/tis-20/Music/ReactPractice/hookswithevent/src/Accordian/MyAccordian.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MyAccordian = props => {\n  _s();\n\n  const [show, setShow] = useState({\n    id: '',\n    status: false\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"accordian_question_section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        onClick: () => setShow({\n          id: props.id,\n          status: !show.status\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          children: show ? \"-\" : \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 80\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          id: props.id,\n          children: [\" \", props.question, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this), show && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"answer_div\",\n        children: props.answer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 11\n    }, this)\n  }, void 0, false);\n};\n\n_s(MyAccordian, \"v3x1gMuH488RZ+pFJlwgmldk+c0=\");\n\n_c = MyAccordian;\nexport default MyAccordian;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyAccordian\");","map":{"version":3,"names":["React","useState","MyAccordian","props","show","setShow","id","status","question","answer"],"sources":["/home/tis-20/Music/ReactPractice/hookswithevent/src/Accordian/MyAccordian.js"],"sourcesContent":["import React, { useState } from 'react'\n\nconst MyAccordian = (props) =>{\n\n    const [show, setShow] = useState({id:'',status:false});\n    \n    return(\n          <>\n          <div className='accordian_question_section'>\n                <h3 onClick={() => setShow({id:props.id,status:!show.status})}><i>{show?\"-\":\"+\"}</i>\n                   <span id={props.id}> {props.question} </span></h3>\n                {show && <p className='answer_div'>{props.answer}</p>} \n          </div>\n  \n            \n          </>  \n    )           \n}\n\nexport default MyAccordian"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAU;EAAA;;EAE1B,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC;IAACK,EAAE,EAAC,EAAJ;IAAOC,MAAM,EAAC;EAAd,CAAD,CAAhC;EAEA,oBACM;IAAA,uBACA;MAAK,SAAS,EAAC,4BAAf;MAAA,wBACM;QAAI,OAAO,EAAE,MAAMF,OAAO,CAAC;UAACC,EAAE,EAACH,KAAK,CAACG,EAAV;UAAaC,MAAM,EAAC,CAACH,IAAI,CAACG;QAA1B,CAAD,CAA1B;QAAA,wBAA+D;UAAA,UAAIH,IAAI,GAAC,GAAD,GAAK;QAAb;UAAA;UAAA;UAAA;QAAA,QAA/D,eACG;UAAM,EAAE,EAAED,KAAK,CAACG,EAAhB;UAAA,gBAAsBH,KAAK,CAACK,QAA5B;QAAA;UAAA;UAAA;UAAA;QAAA,QADH;MAAA;QAAA;QAAA;QAAA;MAAA,QADN,EAGOJ,IAAI,iBAAI;QAAG,SAAS,EAAC,YAAb;QAAA,UAA2BD,KAAK,CAACM;MAAjC;QAAA;QAAA;QAAA;MAAA,QAHf;IAAA;MAAA;MAAA;MAAA;IAAA;EADA,iBADN;AAWH,CAfD;;GAAMP,W;;KAAAA,W;AAiBN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}