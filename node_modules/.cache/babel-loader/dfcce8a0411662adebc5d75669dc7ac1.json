{"ast":null,"code":"var _jsxFileName = \"/home/tis-20/Music/ReactPractice/hookswithevent/src/DigitalClock.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction DigitalClock() {\n  _s();\n\n  let curtime = new Date().toLocaleTimeString();\n  const [curval, setval] = useState(curtime);\n\n  const myTimerFun = () => {\n    curtime = new Date().toLocaleTimeString();\n    setval(curtime);\n  };\n\n  setInterval(myTimerFun, 1000);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"DigitalClockBody\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" Digital Clock\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: curval\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: myTimerFun,\n        children: \"Click here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(DigitalClock, \"XIE+GUBiOTKJvMouNL4I4qSK5tE=\");\n\n_c = DigitalClock;\nexport default DigitalClock;\n\nvar _c;\n\n$RefreshReg$(_c, \"DigitalClock\");","map":{"version":3,"names":["useState","DigitalClock","curtime","Date","toLocaleTimeString","curval","setval","myTimerFun","setInterval"],"sources":["/home/tis-20/Music/ReactPractice/hookswithevent/src/DigitalClock.jsx"],"sourcesContent":["import { useState } from 'react';\nimport './App.css';\n\nfunction DigitalClock() {\n\n    let curtime = new Date().toLocaleTimeString();  \n    const [curval, setval] = useState(curtime);\n    \n      const myTimerFun = ()=>{  \n        curtime = new Date().toLocaleTimeString();  \n        setval(curtime);       \n      }\n    \n     setInterval(myTimerFun, 1000);\n    \n      return(\n        <>\n        <div className='DigitalClockBody'>\n        <h1> Digital Clock</h1>\n        <h1>{curval}</h1>\n        <button onClick={myTimerFun}>Click here</button>\n        </div>\n        </>\n      );\n    }\n\n\n export default DigitalClock;\n\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAO,WAAP;;;;AAEA,SAASC,YAAT,GAAwB;EAAA;;EAEpB,IAAIC,OAAO,GAAG,IAAIC,IAAJ,GAAWC,kBAAX,EAAd;EACA,MAAM,CAACC,MAAD,EAASC,MAAT,IAAmBN,QAAQ,CAACE,OAAD,CAAjC;;EAEE,MAAMK,UAAU,GAAG,MAAI;IACrBL,OAAO,GAAG,IAAIC,IAAJ,GAAWC,kBAAX,EAAV;IACAE,MAAM,CAACJ,OAAD,CAAN;EACD,CAHD;;EAKDM,WAAW,CAACD,UAAD,EAAa,IAAb,CAAX;EAEC,oBACE;IAAA,uBACA;MAAK,SAAS,EAAC,kBAAf;MAAA,wBACA;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADA,eAEA;QAAA,UAAKF;MAAL;QAAA;QAAA;QAAA;MAAA,QAFA,eAGA;QAAQ,OAAO,EAAEE,UAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAHA;IAAA;MAAA;MAAA;MAAA;IAAA;EADA,iBADF;AASD;;GArBIN,Y;;KAAAA,Y;AAwBR,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}