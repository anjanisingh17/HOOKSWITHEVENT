{"ast":null,"code":"var _jsxFileName = \"/home/tis-20/Music/ReactPractice/hookswithevent/src/Accordian/MyAccordian.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Accordian from './Accordian';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MyAccordian = props => {\n  _s();\n\n  const [show, setShow] = useState(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"accordian_question_section\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        onClick: () => setShow(!show),\n        children: [show ? \"-\" : \"+\", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: props.question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this), show && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"answer_div\",\n        children: props.answer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 11\n    }, this)\n  }, void 0, false);\n};\n\n_s(MyAccordian, \"NKb1ZOdhT+qUsWLXSgjSS2bk2C4=\");\n\n_c = MyAccordian;\nexport default MyAccordian;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyAccordian\");","map":{"version":3,"names":["React","useState","Accordian","MyAccordian","props","show","setShow","question","answer"],"sources":["/home/tis-20/Music/ReactPractice/hookswithevent/src/Accordian/MyAccordian.js"],"sourcesContent":["import React, { useState } from 'react'\nimport Accordian from './Accordian'\n\nconst MyAccordian = (props) =>{\n\n    const [show, setShow] = useState(false);\n    \n    return(\n          <>\n          <div className='accordian_question_section'>\n                <p onClick={() => setShow(!show)}>{show?\"-\":\"+\"}\n                    <span><h3>{props.question}</h3></span>\n                </p>\n                \n                {show && <p className='answer_div'>{props.answer}</p>} \n          </div>\n  \n            \n          </>  \n    )           \n}\n\nexport default MyAccordian"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAU;EAAA;;EAE1B,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,KAAD,CAAhC;EAEA,oBACM;IAAA,uBACA;MAAK,SAAS,EAAC,4BAAf;MAAA,wBACM;QAAG,OAAO,EAAE,MAAMK,OAAO,CAAC,CAACD,IAAF,CAAzB;QAAA,WAAmCA,IAAI,GAAC,GAAD,GAAK,GAA5C,eACI;UAAA,uBAAM;YAAA,UAAKD,KAAK,CAACG;UAAX;YAAA;YAAA;YAAA;UAAA;QAAN;UAAA;UAAA;UAAA;QAAA,QADJ;MAAA;QAAA;QAAA;QAAA;MAAA,QADN,EAKOF,IAAI,iBAAI;QAAG,SAAS,EAAC,YAAb;QAAA,UAA2BD,KAAK,CAACI;MAAjC;QAAA;QAAA;QAAA;MAAA,QALf;IAAA;MAAA;MAAA;MAAA;IAAA;EADA,iBADN;AAaH,CAjBD;;GAAML,W;;KAAAA,W;AAmBN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}